<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quiz in Progress</title>
    
    <style>
        body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif; background-color: #fff; color: #333; margin: 0; }
        .quiz-container { max-width: 800px; margin: auto; overflow: hidden; position: relative; }
        .quiz-wrapper { display: flex; transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1); }
        .question-slide { min-width: 100%; box-sizing: border-box; padding: 2rem 1.5rem; }
        .question-header { margin-bottom: 2rem; }
        .question-text { font-size: 1.4rem; font-weight: 500; line-height: 1.5; }
        .option { background-color: #f0f4ff; padding: 1rem; margin-bottom: 1rem; border-radius: 12px; border: 2px solid transparent; cursor: pointer; transition: all 0.2s ease; }
        .option:hover { border-color: #a8c5ff; }
        .option.selected { border-color: #007bff; background-color: #dbeaff; font-weight: bold; }
        .quiz-nav { position: fixed; bottom: 0; left: 0; right: 0; background: #fff; box-shadow: 0 -2px 10px rgba(0,0,0,0.1); padding: 1rem; display: flex; justify-content: space-between; max-width: 800px; margin: auto; }
        .btn { padding: 0.75rem 1.5rem; border: none; border-radius: 25px; font-size: 1rem; font-weight: bold; cursor: pointer; }
        .btn-primary { background-color: #007bff; color: white; }
        .btn-secondary { background-color: #e9ecef; color: #333; }
        .btn:disabled { background-color: #ccc; cursor: not-allowed; }
        #question-counter { position: absolute; top: 1rem; right: 1.5rem; font-size: 0.9rem; color: #888; background: #eee; padding: 5px 10px; border-radius: 15px; }
    </style>
</head>
<body>

    <div class="quiz-container">
        <div id="question-counter"></div>
        <div class="quiz-wrapper" id="quiz-wrapper">
            <!-- Question slides are injected here -->
        </div>
    </div>

    <div class="quiz-nav">
        <button id="prev-btn" class="btn btn-secondary">Previous</button>
        <button id="next-btn" class="btn btn-primary">Next</button>
        <button id="submit-btn" class="btn btn-primary" style="display: none; background-color: #28a745;">Submit Quiz</button>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const quizWrapper = document.getElementById('quiz-wrapper');
            const counterEl = document.getElementById('question-counter');
            const prevBtn = document.getElementById('prev-btn');
            const nextBtn = document.getElementById('next-btn');
            const submitBtn = document.getElementById('submit-btn');

            const quizQuestions = JSON.parse(sessionStorage.getItem('currentQuiz'));
            if (!quizQuestions || quizQuestions.length === 0) {
                quizWrapper.innerHTML = `
                    <div class="question-slide">
                        <h2>Quiz Error</h2>
                        <p>No questions were found for this quiz. Please go back and start a new one.</p>
                    </div>
                `;
                document.querySelector('.quiz-nav').style.display = 'none';
                return;
            }

            let currentQuestionIndex = 0;
            const userAnswers = new Array(quizQuestions.length).fill(null);

            const renderQuestions = () => {
                quizWrapper.innerHTML = '';
                quizQuestions.forEach((q, index) => {
                    const slide = document.createElement('div');
                    slide.className = 'question-slide';
                    slide.innerHTML = `
                        <p class="question-header">Question ${index + 1}</p>
                        <h2 class="question-text">${q.questionText}</h2>
                        <div class="options-container" data-question-index="${index}">
                            <div class="option" data-option="A"><strong>A.</strong> ${q.options.A}</div>
                            <div class="option" data-option="B"><strong>B.</strong> ${q.options.B}</div>
                            <div class="option" data-option="C"><strong>C.</strong> ${q.options.C}</div>
                            <div class="option" data-option="D"><strong>D.</strong> ${q.options.D}</div>
                        </div>
                    `;
                    quizWrapper.appendChild(slide);
                });
                addOptionListeners();
                updateUI();
            };

            const updateUI = () => {
                quizWrapper.style.transform = `translateX(-${currentQuestionIndex * 100}%)`;
                counterEl.textContent = `${currentQuestionIndex + 1} / ${quizQuestions.length}`;
                prevBtn.disabled = currentQuestionIndex === 0;
                
                const isLastQuestion = currentQuestionIndex === quizQuestions.length - 1;
                nextBtn.style.display = isLastQuestion ? 'none' : 'inline-block';
                submitBtn.style.display = isLastQuestion ? 'inline-block' : 'none';
            };

            const addOptionListeners = () => {
                document.querySelectorAll('.option').forEach(optionEl => {
                    optionEl.addEventListener('click', () => {
                        const questionIndex = parseInt(optionEl.parentElement.dataset.questionIndex, 10);
                        const selectedOption = optionEl.dataset.option;
                        userAnswers[questionIndex] = selectedOption;

                        // Update visual selection for the current question's options
                        optionEl.parentElement.querySelectorAll('.option').forEach(opt => opt.classList.remove('selected'));
                        optionEl.classList.add('selected');
                        
                        // Automatically move to the next question
                        setTimeout(() => {
                           if (currentQuestionIndex < quizQuestions.length - 1) {
                               currentQuestionIndex++;
                               updateUI();
                           }
                        }, 200);
                    });
                });
            };

            prevBtn.addEventListener('click', () => {
                if (currentQuestionIndex > 0) {
                    currentQuestionIndex--;
                    updateUI();
                }
            });

            nextBtn.addEventListener('click', () => {
                if (currentQuestionIndex < quizQuestions.length - 1) {
                    currentQuestionIndex++;
                    updateUI();
                }
            });

            submitBtn.addEventListener('click', () => {
                let correctCount = 0;
                quizQuestions.forEach((q, i) => {
                    if (q.correctAnswer === userAnswers[i]) {
                        correctCount++;
                    }
                });
                
                alert(`Quiz Finished!\n\nYou scored ${correctCount} out of ${quizQuestions.length}.`);
                // In a full app, you would redirect to a results page here.
                window.location.href = '2_student_setup_chapters.html?class=' + sessionStorage.getItem('selectedClass') + '&subject=' + sessionStorage.getItem('selectedSubject'); // Go back to chapter selection
            });

            renderQuestions();
        });
    </script>
</body>
</html>
